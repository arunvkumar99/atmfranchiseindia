const fs = require('fs');
const path = require('path');

// Read the Hindi forms.json file
const filePath = path.join(__dirname, '..', 'public', 'locales', 'hi', 'forms.json');
const formsData = JSON.parse(fs.readFileSync(filePath, 'utf8'));

// Critical translations to fix
const translations = {
  // Common form fields
  "Name": "рдирд╛рдо",
  "Email": "рдИрдореЗрд▓",
  "Phone": "рдлрд╝реЛрди",
  "Phone Number": "рдлрд╝реЛрди рдирдВрдмрд░",
  "Mobile Number": "рдореЛрдмрд╛рдЗрд▓ рдирдВрдмрд░",
  "Address": "рдкрддрд╛",
  "City": "рд╢рд╣рд░",
  "State": "рд░рд╛рдЬреНрдп",
  "Pin Code": "рдкрд┐рди рдХреЛрдб",
  "Submit": "рдЬрдорд╛ рдХрд░реЗрдВ",
  "Send": "рднреЗрдЬреЗрдВ",
  "Cancel": "рд░рджреНрдж рдХрд░реЗрдВ",
  "Back": "рд╡рд╛рдкрд╕",
  "Next": "рдЕрдЧрд▓рд╛",
  "Previous": "рдкрд┐рдЫрд▓рд╛",
  "Select": "рдЪреБрдиреЗрдВ",
  "Choose": "рдЪреБрдиреЗрдВ",
  "Upload": "рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ",
  "Download": "рдбрд╛рдЙрдирд▓реЛрдб рдХрд░реЗрдВ",
  "Yes": "рд╣рд╛рдВ",
  "No": "рдирд╣реАрдВ",
  
  // Form titles
  "Enquiry Form": "рдкреВрдЫрддрд╛рдЫ рдлреЙрд░реНрдо",
  "Contact Form": "рд╕рдВрдкрд░реНрдХ рдлреЙрд░реНрдо",
  "Application Form": "рдЖрд╡реЗрджрди рдлреЙрд░реНрдо",
  "Registration Form": "рдкрдВрдЬреАрдХрд░рдг рдлреЙрд░реНрдо",
  
  // Messages
  "Please enter your name": "рдХреГрдкрдпрд╛ рдЕрдкрдирд╛ рдирд╛рдо рджрд░реНрдЬ рдХрд░реЗрдВ",
  "Please enter your email": "рдХреГрдкрдпрд╛ рдЕрдкрдирд╛ рдИрдореЗрд▓ рджрд░реНрдЬ рдХрд░реЗрдВ",
  "Please enter your phone number": "рдХреГрдкрдпрд╛ рдЕрдкрдирд╛ рдлрд╝реЛрди рдирдВрдмрд░ рджрд░реНрдЬ рдХрд░реЗрдВ",
  "Please select a state": "рдХреГрдкрдпрд╛ рдПрдХ рд░рд╛рдЬреНрдп рдЪреБрдиреЗрдВ",
  "Please enter a valid email": "рдХреГрдкрдпрд╛ рдПрдХ рдорд╛рдиреНрдп рдИрдореЗрд▓ рджрд░реНрдЬ рдХрд░реЗрдВ",
  "Please enter a valid phone number": "рдХреГрдкрдпрд╛ рдПрдХ рдорд╛рдиреНрдп рдлрд╝реЛрди рдирдВрдмрд░ рджрд░реНрдЬ рдХрд░реЗрдВ",
  "Form submitted successfully": "рдлреЙрд░реНрдо рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рдЬрдорд╛ рдХрд┐рдпрд╛ рдЧрдпрд╛",
  "Error submitting form": "рдлреЙрд░реНрдо рдЬрдорд╛ рдХрд░рдиреЗ рдореЗрдВ рддреНрд░реБрдЯрд┐",
  
  // Placeholders
  "Enter your name": "рдЕрдкрдирд╛ рдирд╛рдо рджрд░реНрдЬ рдХрд░реЗрдВ",
  "Enter your email": "рдЕрдкрдирд╛ рдИрдореЗрд▓ рджрд░реНрдЬ рдХрд░реЗрдВ",
  "Enter your phone number": "рдЕрдкрдирд╛ рдлрд╝реЛрди рдирдВрдмрд░ рджрд░реНрдЬ рдХрд░реЗрдВ",
  "Enter your message": "рдЕрдкрдирд╛ рд╕рдВрджреЗрд╢ рджрд░реНрдЬ рдХрд░реЗрдВ",
  "Select your state": "рдЕрдкрдирд╛ рд░рд╛рдЬреНрдп рдЪреБрдиреЗрдВ",
  "Select an option": "рдПрдХ рд╡рд┐рдХрд▓реНрдк рдЪреБрдиреЗрдВ",
  
  // Investment related
  "Investment Capacity": "рдирд┐рд╡реЗрд╢ рдХреНрд╖рдорддрд╛",
  "Investment Amount": "рдирд┐рд╡реЗрд╢ рд░рд╛рд╢рд┐",
  "Investment Range": "рдирд┐рд╡реЗрд╢ рд╕реАрдорд╛",
  "Monthly Income": "рдорд╛рд╕рд┐рдХ рдЖрдп",
  "Expected ROI": "рдЕрдкреЗрдХреНрд╖рд┐рдд рдЖрд░рдУрдЖрдИ",
  
  // ATM specific
  "ATM Location": "рдПрдЯреАрдПрдо рд╕реНрдерд╛рди",
  "Preferred Location": "рдкрд╕рдВрджреАрджрд╛ рд╕реНрдерд╛рди",
  "Location Type": "рд╕реНрдерд╛рди рдкреНрд░рдХрд╛рд░",
  "Site Details": "рд╕рд╛рдЗрдЯ рд╡рд┐рд╡рд░рдг",
  "Franchise Type": "рдлреНрд░реИрдВрдЪрд╛рдЗрдЬрд╝реА рдкреНрд░рдХрд╛рд░",
  
  // Status messages
  "Loading": "рд▓реЛрдб рд╣реЛ рд░рд╣рд╛ рд╣реИ",
  "Processing": "рдкреНрд░рд╕рдВрд╕реНрдХрд░рдг",
  "Please wait": "рдХреГрдкрдпрд╛ рдкреНрд░рддреАрдХреНрд╖рд╛ рдХрд░реЗрдВ",
  "Success": "рд╕рдлрд▓рддрд╛",
  "Error": "рддреНрд░реБрдЯрд┐",
  "Warning": "рдЪреЗрддрд╛рд╡рдиреА",
  "Required": "рдЖрд╡рд╢реНрдпрдХ",
  "Optional": "рд╡реИрдХрд▓реНрдкрд┐рдХ"
};

// Function to recursively replace English strings with Hindi
function translateObject(obj) {
  for (let key in obj) {
    if (typeof obj[key] === 'string') {
      // Check if the value is in English and we have a translation
      if (translations[obj[key]]) {
        console.log(`Translating: "${obj[key]}" -> "${translations[obj[key]]}"`);
        obj[key] = translations[obj[key]];
      }
      // Also check for partial matches
      else {
        for (let [eng, hindi] of Object.entries(translations)) {
          if (obj[key].includes(eng) && obj[key] !== hindi) {
            const newValue = obj[key].replace(eng, hindi);
            if (newValue !== obj[key]) {
              console.log(`Partial translation: "${obj[key]}" -> "${newValue}"`);
              obj[key] = newValue;
            }
          }
        }
      }
    } else if (typeof obj[key] === 'object' && obj[key] !== null) {
      translateObject(obj[key]);
    }
  }
}

// Apply translations
translateObject(formsData);

// Write the updated file
fs.writeFileSync(filePath, JSON.stringify(formsData, null, 2), 'utf8');
console.log('\nтЬЕ Forms translations updated successfully!');
console.log(`ЁЯУБ File updated: ${filePath}`);