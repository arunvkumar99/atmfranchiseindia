const fs = require('fs');
const path = require('path');

console.log('ЁЯФз FIXING CRITICAL HINDI ISSUES - TEAM LEAD RAVI');
console.log('=' .repeat(60));

// CRITICAL FIX 1: Update products.json with missing keys
const productsTranslations = {
  "title": "рд╣рдорд╛рд░реЗ рдПрдЯреАрдПрдо рдЙрддреНрдкрд╛рдж рдФрд░ рд╕реЗрд╡рд╛рдПрдВ",
  "subtitle": "рдЖрдкрдХреА рдЖрд╡рд╢реНрдпрдХрддрд╛рдУрдВ рдХреЗ рдЕрдиреБрд░реВрдк рд╡реНрдпрд╛рдкрдХ рдПрдЯреАрдПрдо рдлреНрд░реИрдВрдЪрд╛рдЗрдЬрд╝реА рд╕рдорд╛рдзрд╛рди",
  "hero": {
    "badge": "рд╕рдорд╛рдзрд╛рди",
    "title": "рд╣рдорд╛рд░реЗ рдПрдЯреАрдПрдо рдЙрддреНрдкрд╛рдж",
    "subtitle": "рд╡реНрдпрд╛рдкрдХ рдПрдЯреАрдПрдо рдлреНрд░реИрдВрдЪрд╛рдЗрдЬрд╝реА рд╕рдорд╛рдзрд╛рди рдЬреЛ рдЖрдкрдХреА рд╡реНрдпрд╛рд╡рд╕рд╛рдпрд┐рдХ рдЖрд╡рд╢реНрдпрдХрддрд╛рдУрдВ рдХреЛ рдкреВрд░рд╛ рдХрд░рддреЗ рд╣реИрдВ"
  },
  "products": {
    "atm": {
      "title": "рдПрдЯреАрдПрдо рдлреНрд░реИрдВрдЪрд╛рдЗрдЬрд╝реА",
      "description": "RBI рд▓рд╛рдЗрд╕реЗрдВрд╕ рдкреНрд░рд╛рдкреНрдд WLA рдСрдкрд░реЗрдЯрд░реЛрдВ рдХреЗ рд╕рд╛рде рдкреВрд░реНрдг рдПрдЯреАрдПрдо рдлреНрд░реИрдВрдЪрд╛рдЗрдЬрд╝реА рд╕рдорд╛рдзрд╛рди",
      "features": {
        "deployment": "рд╕рдВрдкреВрд░реНрдг рдкрд░рд┐рдирд┐рдпреЛрдЬрди рд╕рдорд░реНрдерди",
        "training": "рд╡реНрдпрд╛рдкрдХ рдкреНрд░рд╢рд┐рдХреНрд╖рдг",
        "maintenance": "24/7 рд░рдЦрд░рдЦрд╛рд╡",
        "support": "рдирд┐рд░рдВрддрд░ рд╡реНрдпрд╛рд╡рд╕рд╛рдпрд┐рдХ рд╕рдорд░реНрдерди"
      }
    },
    "kiosk": {
      "title": "рдмреИрдВрдХрд┐рдВрдЧ рдХрд┐рдпреЛрд╕реНрдХ",
      "description": "рдорд▓реНрдЯреА-рд╕рд░реНрд╡рд┐рд╕ рдбрд┐рдЬрд┐рдЯрд▓ рдмреИрдВрдХрд┐рдВрдЧ рдХрд┐рдпреЛрд╕реНрдХ рд╕рдорд╛рдзрд╛рди",
      "features": {
        "services": "рд╡рд┐рд╡рд┐рдз рд╕реЗрд╡рд╛рдПрдВ",
        "interface": "рдЙрдкрдпреЛрдЧрдХрд░реНрддрд╛-рдЕрдиреБрдХреВрд▓ рдЗрдВрдЯрд░рдлреЗрд╕",
        "integration": "рдмреИрдВрдХ рдПрдХреАрдХрд░рдг",
        "analytics": "рд╡рд╛рд╕реНрддрд╡рд┐рдХ рд╕рдордп рд╡рд┐рд╢реНрд▓реЗрд╖рдг"
      }
    },
    "pos": {
      "title": "POS рдЯрд░реНрдорд┐рдирд▓",
      "description": "рд╡реНрдпрд╛рдкрд╛рд░рд┐рдпреЛрдВ рдХреЗ рд▓рд┐рдП рдкреНрд╡рд╛рдЗрдВрдЯ рдСрдл рд╕реЗрд▓ рд╕рдорд╛рдзрд╛рди",
      "features": {
        "acceptance": "рд╕рднреА рдХрд╛рд░реНрдб рд╕реНрд╡реАрдХрд╛рд░ рдХрд░реЗрдВ",
        "settlement": "рддреНрд╡рд░рд┐рдд рдирд┐рдкрдЯрд╛рди",
        "reports": "рд╡рд┐рд╕реНрддреГрдд рд░рд┐рдкреЛрд░реНрдЯ",
        "integration": "рд╕рд┐рд╕реНрдЯрдо рдПрдХреАрдХрд░рдг"
      }
    }
  },
  "packages": {
    "title": "рд╣рдорд╛рд░реЗ рдкреИрдХреЗрдЬ",
    "subtitle": "рдЕрдкрдиреА рдЖрд╡рд╢реНрдпрдХрддрд╛рдУрдВ рдХреЗ рдЕрдиреБрд╕рд╛рд░ рд╕рд╣реА рдкреИрдХреЗрдЬ рдЪреБрдиреЗрдВ",
    "basic": {
      "name": "рдмреБрдирд┐рдпрд╛рджреА",
      "price": "тВ╣2-3 рд▓рд╛рдЦ",
      "features": [
        "рд╕рд┐рдВрдЧрд▓ рдПрдЯреАрдПрдо рд╕реНрдерд╛рдкрдирд╛",
        "рдмреБрдирд┐рдпрд╛рджреА рдкреНрд░рд╢рд┐рдХреНрд╖рдг",
        "3 рдорд╣реАрдиреЗ рдХрд╛ рд╕рдорд░реНрдерди",
        "рдорд╛рдирдХ рд╕реНрдерд╛рди"
      ]
    },
    "silver": {
      "name": "рд╕рд┐рд▓реНрд╡рд░",
      "price": "тВ╣3-4 рд▓рд╛рдЦ",
      "features": [
        "рдкреНрд░реАрдорд┐рдпрдо рд╕реНрдерд╛рди",
        "рдЙрдиреНрдирдд рдкреНрд░рд╢рд┐рдХреНрд╖рдг",
        "6 рдорд╣реАрдиреЗ рдХрд╛ рд╕рдорд░реНрдерди",
        "рдорд╛рд░реНрдХреЗрдЯрд┐рдВрдЧ рд╕рд╣рд╛рдпрддрд╛"
      ]
    },
    "gold": {
      "name": "рдЧреЛрд▓реНрдб",
      "price": "тВ╣4-5 рд▓рд╛рдЦ",
      "features": [
        "рдкреНрд░рд╛рдЗрдо рд╕реНрдерд╛рди",
        "рдкреВрд░реНрдг рдкреНрд░рд╢рд┐рдХреНрд╖рдг",
        "1 рд╡рд░реНрд╖ рдХрд╛ рд╕рдорд░реНрдерди",
        "рд╕рдВрдкреВрд░реНрдг рд╡реНрдпрд╛рд╡рд╕рд╛рдпрд┐рдХ рд╕рд╣рд╛рдпрддрд╛"
      ]
    }
  }
};

// CRITICAL FIX 2: Fix forms namespace with all labels
const formsTranslations = {
  "title": "рдкреВрдЫрддрд╛рдЫ рдлреЙрд░реНрдо",
  "subtitle": "рдЕрдкрдиреА рдЬрд╛рдирдХрд╛рд░реА рднрд░реЗрдВ рдФрд░ рд╣рдо рдЖрдкрд╕реЗ рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдВрдЧреЗ",
  "labels": {
    "fullName": "рдкреВрд░рд╛ рдирд╛рдо",
    "firstName": "рдкрд╣рд▓рд╛ рдирд╛рдо",
    "lastName": "рдЕрдВрддрд┐рдо рдирд╛рдо",
    "email": "рдИрдореЗрд▓ рдкрддрд╛",
    "phone": "рдлреЛрди рдирдВрдмрд░",
    "alternatePhone": "рд╡реИрдХрд▓реНрдкрд┐рдХ рдлреЛрди",
    "message": "рд╕рдВрджреЗрд╢",
    "address": "рдкрддрд╛",
    "city": "рд╢рд╣рд░",
    "state": "рд░рд╛рдЬреНрдп",
    "pincode": "рдкрд┐рди рдХреЛрдб",
    "country": "рджреЗрд╢",
    "investment": "рдирд┐рд╡реЗрд╢ рд░рд╛рд╢рд┐",
    "experience": "рд╡реНрдпрд╛рд╡рд╕рд╛рдпрд┐рдХ рдЕрдиреБрднрд╡",
    "location": "рдкреНрд░рд╕реНрддрд╛рд╡рд┐рдд рд╕реНрдерд╛рди",
    "nearbyBusiness": "рдЖрд╕-рдкрд╛рд╕ рдХреЗ рд╡реНрдпрд╡рд╕рд╛рдп",
    "footfall": "рджреИрдирд┐рдХ рдлреБрдЯрдлреЙрд▓",
    "locationType": "рд╕реНрдерд╛рди рдХрд╛ рдкреНрд░рдХрд╛рд░",
    "landmark": "рдирд┐рдХрдЯрддрдо рд▓реИрдВрдбрдорд╛рд░реНрдХ",
    "businessType": "рд╡реНрдпрд╡рд╕рд╛рдп рдХрд╛ рдкреНрд░рдХрд╛рд░",
    "currentOccupation": "рд╡рд░реНрддрдорд╛рди рд╡реНрдпрд╡рд╕рд╛рдп",
    "preferredLocation": "рдкрд╕рдВрджреАрджрд╛ рд╕реНрдерд╛рди",
    "howDidYouHear": "рдЖрдкрдиреЗ рд╣рдорд╛рд░реЗ рдмрд╛рд░реЗ рдореЗрдВ рдХреИрд╕реЗ рд╕реБрдирд╛?"
  },
  "placeholders": {
    "fullName": "рдЕрдкрдирд╛ рдкреВрд░рд╛ рдирд╛рдо рджрд░реНрдЬ рдХрд░реЗрдВ",
    "firstName": "рдкрд╣рд▓рд╛ рдирд╛рдо",
    "lastName": "рдЕрдВрддрд┐рдо рдирд╛рдо",
    "email": "your.email@example.com",
    "phone": "98765 43210",
    "message": "рдЕрдкрдирд╛ рд╕рдВрджреЗрд╢ рдпрд╣рд╛рдБ рд▓рд┐рдЦреЗрдВ...",
    "address": "рдЕрдкрдирд╛ рдкреВрд░рд╛ рдкрддрд╛ рджрд░реНрдЬ рдХрд░реЗрдВ",
    "city": "рд╢рд╣рд░ рдХрд╛ рдирд╛рдо",
    "pincode": "6 рдЕрдВрдХреЛрдВ рдХрд╛ рдкрд┐рди рдХреЛрдб",
    "investment": "рдирд┐рд╡реЗрд╢ рд░рд╛рд╢рд┐ рдЪреБрдиреЗрдВ",
    "location": "рдкреНрд░рд╕реНрддрд╛рд╡рд┐рдд рдПрдЯреАрдПрдо рд╕реНрдерд╛рди",
    "nearbyBusiness": "рдЖрд╕-рдкрд╛рд╕ рдХреЗ рдкреНрд░рдореБрдЦ рд╡реНрдпрд╡рд╕рд╛рдп",
    "footfall": "рдЕрдиреБрдорд╛рдирд┐рдд рджреИрдирд┐рдХ рдлреБрдЯрдлреЙрд▓"
  },
  "validation": {
    "required": "рдпрд╣ рдлрд╝реАрд▓реНрдб рдЖрд╡рд╢реНрдпрдХ рд╣реИ",
    "invalidEmail": "рдХреГрдкрдпрд╛ рдПрдХ рдорд╛рдиреНрдп рдИрдореЗрд▓ рдкрддрд╛ рджрд░реНрдЬ рдХрд░реЗрдВ",
    "invalidPhone": "рдХреГрдкрдпрд╛ рдПрдХ рдорд╛рдиреНрдп рдлреЛрди рдирдВрдмрд░ рджрд░реНрдЬ рдХрд░реЗрдВ",
    "minLength": "рдиреНрдпреВрдирддрдо {{min}} рдЕрдХреНрд╖рд░ рдЖрд╡рд╢реНрдпрдХ рд╣реИрдВ",
    "maxLength": "рдЕрдзрд┐рдХрддрдо {{max}} рдЕрдХреНрд╖рд░ рдЕрдиреБрдордд рд╣реИрдВ",
    "invalidPincode": "рдХреГрдкрдпрд╛ 6 рдЕрдВрдХреЛрдВ рдХрд╛ рд╡реИрдз рдкрд┐рди рдХреЛрдб рджрд░реНрдЬ рдХрд░реЗрдВ"
  },
  "buttons": {
    "submit": "рдлреЙрд░реНрдо рдЬрдорд╛ рдХрд░реЗрдВ",
    "submitEnquiry": "рдкреВрдЫрддрд╛рдЫ рдЬрдорд╛ рдХрд░реЗрдВ",
    "submitApplication": "рдЖрд╡реЗрджрди рдЬрдорд╛ рдХрд░реЗрдВ",
    "reset": "рд░реАрд╕реЗрдЯ рдХрд░реЗрдВ",
    "cancel": "рд░рджреНрдж рдХрд░реЗрдВ",
    "back": "рд╡рд╛рдкрд╕",
    "next": "рдЕрдЧрд▓рд╛"
  },
  "success": {
    "title": "рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рдЬрдорд╛ рдХрд┐рдпрд╛ рдЧрдпрд╛!",
    "message": "рдзрдиреНрдпрд╡рд╛рдж! рд╣рдо 24 рдШрдВрдЯреЗ рдХреЗ рднреАрддрд░ рдЖрдкрд╕реЗ рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдВрдЧреЗред",
    "reference": "рдЖрдкрдХрд╛ рд╕рдВрджрд░реНрдн рд╕рдВрдЦреНрдпрд╛: {{ref}}"
  },
  "options": {
    "investment": {
      "2to3": "тВ╣2-3 рд▓рд╛рдЦ",
      "3to4": "тВ╣3-4 рд▓рд╛рдЦ",
      "4to5": "тВ╣4-5 рд▓рд╛рдЦ",
      "above5": "тВ╣5 рд▓рд╛рдЦ рд╕реЗ рдЕрдзрд┐рдХ"
    },
    "locationType": {
      "market": "рдмрд╛рдЬрд╝рд╛рд░ рдХреНрд╖реЗрддреНрд░",
      "residential": "рдЖрд╡рд╛рд╕реАрдп рдХреНрд╖реЗрддреНрд░",
      "commercial": "рд╡реНрдпрд╛рд╡рд╕рд╛рдпрд┐рдХ рдХреНрд╖реЗрддреНрд░",
      "highway": "рд░рд╛рдЬрдорд╛рд░реНрдЧ",
      "rural": "рдЧреНрд░рд╛рдореАрдг рдХреНрд╖реЗрддреНрд░"
    }
  }
};

// CRITICAL FIX 3: Fix common namespace for breadcrumbs and footer
const commonUpdates = {
  "breadcrumb": {
    "home": "рдореБрдЦреНрдп рдкреГрд╖реНрда",
    "hi": "рд╣рд┐рдВрджреА",
    "aboutUs": "рд╣рдорд╛рд░реЗ рдмрд╛рд░реЗ рдореЗрдВ",
    "contactUs": "рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдВ",
    "products": "рдЙрддреНрдкрд╛рдж",
    "franchise": "рдлреНрд░реИрдВрдЪрд╛рдЗрдЬрд╝реА"
  },
  "copyright": "┬й 2025 рдПрдЯреАрдПрдо рдлреНрд░реИрдВрдЪрд╛рдЗрдЬрд╝ рдЗрдВрдбрд┐рдпрд╛ред рд╕рд░реНрд╡рд╛рдзрд┐рдХрд╛рд░ рд╕реБрд░рдХреНрд╖рд┐рддред | рдХреЗрд╡рд▓ RBI рд▓рд╛рдЗрд╕реЗрдВрд╕ рдкреНрд░рд╛рдкреНрдд рднрд╛рдЧреАрджрд╛рд░",
  "stats": {
    "secure": "100% рд╕реБрд░рдХреНрд╖рд┐рдд",
    "response": "24 рдШрдВрдЯреЗ рдкреНрд░рддрд┐рдХреНрд░рд┐рдпрд╛",
    "partners": "200+ рднрд╛рдЧреАрджрд╛рд░",
    "uptime": "99.9% рдЕрдкрдЯрд╛рдЗрдо"
  }
};

// Function to update JSON files
function updateJsonFile(namespace, newData) {
  const filePath = `public/locales/hi/${namespace}.json`;
  
  try {
    let existing = {};
    if (fs.existsSync(filePath)) {
      existing = JSON.parse(fs.readFileSync(filePath, 'utf8'));
    }
    
    // Deep merge
    const merged = deepMerge(existing, newData);
    
    fs.writeFileSync(filePath, JSON.stringify(merged, null, 2));
    console.log(`тЬЕ Updated ${namespace}.json`);
    return true;
  } catch (error) {
    console.error(`тЭМ Error updating ${namespace}.json:`, error.message);
    return false;
  }
}

function deepMerge(target, source) {
  const output = { ...target };
  
  for (const key in source) {
    if (source[key] && typeof source[key] === 'object' && !Array.isArray(source[key])) {
      if (key in target) {
        output[key] = deepMerge(target[key], source[key]);
      } else {
        output[key] = source[key];
      }
    } else {
      output[key] = source[key];
    }
  }
  
  return output;
}

// Execute updates
console.log('\nЁЯУЭ Updating Hindi Translation Files...\n');

updateJsonFile('products', productsTranslations);
updateJsonFile('forms', formsTranslations);
updateJsonFile('common', commonUpdates);

// Create location namespace if it doesn't exist
const locationTranslations = {
  "title": "рдПрдЯреАрдПрдо рд╕реНрдерд╛рди рдЬрдорд╛ рдХрд░реЗрдВ",
  "subtitle": "рдЕрдкрдиреЗ рдкреНрд░рд╕реНрддрд╛рд╡рд┐рдд рдПрдЯреАрдПрдо рд╕реНрдерд╛рди рдХрд╛ рд╡рд┐рд╡рд░рдг рдкреНрд░рджрд╛рди рдХрд░реЗрдВ",
  "form": {
    "title": "рд╕реНрдерд╛рди рд╡рд┐рд╡рд░рдг",
    "labels": {
      "name": "рдЖрдкрдХрд╛ рдирд╛рдо",
      "email": "рдИрдореЗрд▓ рдкрддрд╛",
      "phone": "рдлреЛрди рдирдВрдмрд░",
      "address": "рдкреНрд░рд╕реНрддрд╛рд╡рд┐рдд рд╕реНрдерд╛рди рдХрд╛ рдкрддрд╛",
      "landmark": "рдирд┐рдХрдЯрддрдо рд▓реИрдВрдбрдорд╛рд░реНрдХ",
      "pincode": "рдкрд┐рди рдХреЛрдб",
      "state": "рд░рд╛рдЬреНрдп",
      "city": "рд╢рд╣рд░",
      "locationType": "рд╕реНрдерд╛рди рдХрд╛ рдкреНрд░рдХрд╛рд░",
      "footfall": "рджреИрдирд┐рдХ рдлреБрдЯрдлреЙрд▓",
      "nearbyBusiness": "рдЖрд╕-рдкрд╛рд╕ рдХреЗ рд╡реНрдпрд╡рд╕рд╛рдп"
    },
    "buttons": {
      "submit": "рд╡рд┐рд╢реНрд▓реЗрд╖рдг рдХреЗ рд▓рд┐рдП рдЬрдорд╛ рдХрд░реЗрдВ",
      "reset": "рдлреЙрд░реНрдо рд░реАрд╕реЗрдЯ рдХрд░реЗрдВ"
    }
  },
  "stats": {
    "analyzed": "рд╕реНрдерд╛рди рд╡рд┐рд╢реНрд▓реЗрд╖рд┐рдд",
    "time": "рд╡рд┐рд╢реНрд▓реЗрд╖рдг рд╕рдордп",
    "success": "рд╕рдлрд▓рддрд╛ рджрд░",
    "partners": "рд╕рдХреНрд░рд┐рдп рднрд╛рдЧреАрджрд╛рд░"
  }
};

updateJsonFile('location', locationTranslations);

console.log('\nтЬЕ Critical Hindi translation files updated!');
console.log('\nЁЯУЛ Next Steps:');
console.log('1. Fix component files to use t() function');
console.log('2. Test all pages in Hindi mode');
console.log('3. Take screenshots as proof');

// Generate status report
const report = {
  timestamp: new Date().toISOString(),
  filesUpdated: ['products.json', 'forms.json', 'common.json', 'location.json'],
  criticalFixesApplied: [
    'Products page translation keys',
    'Form labels and placeholders',
    'Breadcrumb Hindi display',
    'Footer copyright in Hindi',
    'Stats section translations'
  ],
  remainingWork: [
    'Fix AboutUs.tsx hardcoded text (60 instances)',
    'Fix JoinUsPage.tsx hardcoded text (50 instances)',
    'Update component files to use translations',
    'Test and verify all pages'
  ]
};

fs.writeFileSync('critical-fixes-report.json', JSON.stringify(report, null, 2));
console.log('\nЁЯУК Report saved to critical-fixes-report.json');